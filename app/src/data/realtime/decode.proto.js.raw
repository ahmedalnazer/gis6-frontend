'use strict'; // code generated by pbf v3.2.1
let exports = {}

var mtype = exports.mtype = {
    "mt_unknown": {
        "value": 0,
        "options": {}
    },
    "mt_iomdata": {
        "value": 1,
        "options": {}
    },
    "mt_minmax": {
        "value": 2,
        "options": {}
    },
    "mt_sysinfo": {
        "value": 3,
        "options": {}
    },
    "mt_tcdata": {
        "value": 4,
        "options": {}
    },
    "mt_vgcdata": {
        "value": 5,
        "options": {}
    },
    "mt_tczone": {
        "value": 6,
        "options": {}
    },
    "mt_mdtmsg": {
        "value": 7,
        "options": {}
    },
    "mt_healthstatus": {
        "value": 8,
        "options": {}
    }
};

var PbProcessStatus = exports.PbProcessStatus = {
    "ProcessStatusUnknown": {
        "value": 0,
        "options": {}
    },
    "ProcessStatusPending": {
        "value": 1,
        "options": {}
    },
    "ProcessStatusStarted": {
        "value": 2,
        "options": {}
    },
    "ProcessStatusCancelled": {
        "value": 3,
        "options": {}
    },
    "ProcessStatusCompleted": {
        "value": 4,
        "options": {}
    },
    "ProcessStatusFailed": {
        "value": 5,
        "options": {}
    },
    "ProcessStatusMax": {
        "value": 6,
        "options": {}
    }
};

// unknown_msg ========================================

var unknown_msg = exports.unknown_msg = {};

unknown_msg.read = function (pbf, end) {
    return pbf.readFields(unknown_msg._readField, {mt: 0}, end);
};
unknown_msg._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.mt = pbf.readVarint();
};
unknown_msg.write = function (obj, pbf) {
    if (obj.mt) pbf.writeVarintField(1, obj.mt);
};

// iomdata ========================================

var iomdata = exports.iomdata = {};

iomdata.read = function (pbf, end) {
    return pbf.readFields(iomdata._readField, {mt: 0, total_d_inputs: 0, total_d_outputs: 0, total_a_inputs: 0, total_a_outputs: 0, d_inputs: null, d_outputs: null, a_inputs: null, a_outputs: null}, end);
};
iomdata._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.mt = pbf.readVarint();
    else if (tag === 2) obj.total_d_inputs = pbf.readVarint();
    else if (tag === 3) obj.total_d_outputs = pbf.readVarint();
    else if (tag === 4) obj.total_a_inputs = pbf.readVarint();
    else if (tag === 5) obj.total_a_outputs = pbf.readVarint();
    else if (tag === 6) obj.d_inputs = pbf.readBytes();
    else if (tag === 7) obj.d_outputs = pbf.readBytes();
    else if (tag === 8) obj.a_inputs = pbf.readBytes();
    else if (tag === 9) obj.a_outputs = pbf.readBytes();
};
iomdata.write = function (obj, pbf) {
    if (obj.mt) pbf.writeVarintField(1, obj.mt);
    if (obj.total_d_inputs) pbf.writeVarintField(2, obj.total_d_inputs);
    if (obj.total_d_outputs) pbf.writeVarintField(3, obj.total_d_outputs);
    if (obj.total_a_inputs) pbf.writeVarintField(4, obj.total_a_inputs);
    if (obj.total_a_outputs) pbf.writeVarintField(5, obj.total_a_outputs);
    if (obj.d_inputs) pbf.writeBytesField(6, obj.d_inputs);
    if (obj.d_outputs) pbf.writeBytesField(7, obj.d_outputs);
    if (obj.a_inputs) pbf.writeBytesField(8, obj.a_inputs);
    if (obj.a_outputs) pbf.writeBytesField(9, obj.a_outputs);
};

// minmax ========================================

var minmax = exports.minmax = {};

minmax.read = function (pbf, end) {
    return pbf.readFields(minmax._readField, {mt: 0, min_zone: 0, max_zone: 0, min: 0, max: 0}, end);
};
minmax._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.mt = pbf.readVarint();
    else if (tag === 2) obj.min_zone = pbf.readVarint();
    else if (tag === 3) obj.max_zone = pbf.readVarint();
    else if (tag === 4) obj.min = pbf.readVarint(true);
    else if (tag === 5) obj.max = pbf.readVarint(true);
};
minmax.write = function (obj, pbf) {
    if (obj.mt) pbf.writeVarintField(1, obj.mt);
    if (obj.min_zone) pbf.writeVarintField(2, obj.min_zone);
    if (obj.max_zone) pbf.writeVarintField(3, obj.max_zone);
    if (obj.min) pbf.writeVarintField(4, obj.min);
    if (obj.max) pbf.writeVarintField(5, obj.max);
};

// sysinfo ========================================

var sysinfo = exports.sysinfo = {};

sysinfo.read = function (pbf, end) {
    return pbf.readFields(sysinfo._readField, {mt: 0, state: 0, order_status: 0, order_id: 0, target: 0, inj_cycle: 0, cycle_id: 0, good_parts: 0, text_message: "", msg: null, dmsg: null}, end);
};
sysinfo._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.mt = pbf.readVarint();
    else if (tag === 2) obj.state = pbf.readVarint();
    else if (tag === 4) obj.order_status = pbf.readVarint();
    else if (tag === 5) obj.order_id = pbf.readVarint(true);
    else if (tag === 6) obj.target = pbf.readVarint(true);
    else if (tag === 7) obj.inj_cycle = pbf.readVarint(true);
    else if (tag === 8) obj.cycle_id = pbf.readVarint(true);
    else if (tag === 9) obj.good_parts = pbf.readVarint(true);
    else if (tag === 3) obj.text_message = pbf.readString(), obj.msg = "text_message";
    else if (tag === 10) obj.dmsg = dbmsg.read(pbf, pbf.readVarint() + pbf.pos), obj.msg = "dmsg";
};
sysinfo.write = function (obj, pbf) {
    if (obj.mt) pbf.writeVarintField(1, obj.mt);
    if (obj.state) pbf.writeVarintField(2, obj.state);
    if (obj.order_status) pbf.writeVarintField(4, obj.order_status);
    if (obj.order_id) pbf.writeVarintField(5, obj.order_id);
    if (obj.target) pbf.writeVarintField(6, obj.target);
    if (obj.inj_cycle) pbf.writeVarintField(7, obj.inj_cycle);
    if (obj.cycle_id) pbf.writeVarintField(8, obj.cycle_id);
    if (obj.good_parts) pbf.writeVarintField(9, obj.good_parts);
    if (obj.text_message) pbf.writeStringField(3, obj.text_message);
    if (obj.dmsg) pbf.writeMessage(10, dbmsg.write, obj.dmsg);
};

// dbmsg ========================================

var dbmsg = exports.dbmsg = {};

dbmsg.read = function (pbf, end) {
    return pbf.readFields(dbmsg._readField, {dbid: 0, parameters: ""}, end);
};
dbmsg._readField = function (tag, obj, pbf) {
    if (tag === 100) obj.dbid = pbf.readVarint(true);
    else if (tag === 101) obj.parameters = pbf.readString();
};
dbmsg.write = function (obj, pbf) {
    if (obj.dbid) pbf.writeVarintField(100, obj.dbid);
    if (obj.parameters) pbf.writeStringField(101, obj.parameters);
};

// mdtmsg ========================================

var mdtmsg = exports.mdtmsg = {};

mdtmsg.read = function (pbf, end) {
    return pbf.readFields(mdtmsg._readField, {mt: 0, progress: 0, dbid: 0, parameters: ""}, end);
};
mdtmsg._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.mt = pbf.readVarint();
    else if (tag === 2) obj.progress = pbf.readVarint(true);
    else if (tag === 100) obj.dbid = pbf.readVarint(true);
    else if (tag === 101) obj.parameters = pbf.readString();
};
mdtmsg.write = function (obj, pbf) {
    if (obj.mt) pbf.writeVarintField(1, obj.mt);
    if (obj.progress) pbf.writeVarintField(2, obj.progress);
    if (obj.dbid) pbf.writeVarintField(100, obj.dbid);
    if (obj.parameters) pbf.writeStringField(101, obj.parameters);
};

// tcdata ========================================

var tcdata = exports.tcdata = {};

tcdata.read = function (pbf, end) {
    return pbf.readFields(tcdata._readField, {mt: 0, slice_id: 0, zones: 0, records: []}, end);
};
tcdata._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.mt = pbf.readVarint();
    else if (tag === 2) obj.slice_id = pbf.readVarint();
    else if (tag === 3) obj.zones = pbf.readVarint();
    else if (tag === 4) pbf.readPackedVarint(obj.records, true);
};
tcdata.write = function (obj, pbf) {
    if (obj.mt) pbf.writeVarintField(1, obj.mt);
    if (obj.slice_id) pbf.writeVarintField(2, obj.slice_id);
    if (obj.zones) pbf.writeVarintField(3, obj.zones);
    if (obj.records) pbf.writePackedVarint(4, obj.records);
};

// vgcdata ========================================

var vgcdata = exports.vgcdata = {};

vgcdata.read = function (pbf, end) {
    return pbf.readFields(vgcdata._readField, {mt: 0, slice_id: 0, zones: 0, records: []}, end);
};
vgcdata._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.mt = pbf.readVarint();
    else if (tag === 2) obj.slice_id = pbf.readVarint();
    else if (tag === 3) obj.zones = pbf.readVarint();
    else if (tag === 4) pbf.readPackedVarint(obj.records, true);
};
vgcdata.write = function (obj, pbf) {
    if (obj.mt) pbf.writeVarintField(1, obj.mt);
    if (obj.slice_id) pbf.writeVarintField(2, obj.slice_id);
    if (obj.zones) pbf.writeVarintField(3, obj.zones);
    if (obj.records) pbf.writePackedVarint(4, obj.records);
};

// tczone_record ========================================

var tczone_record = exports.tczone_record = {};

tczone_record.read = function (pbf, end) {
    return pbf.readFields(tczone_record._readField, {temp_sp: 0, manual_sp: 0, actual_temp: 0, actual_percent: 0, actual_current: 0, settings: 0, temperature_alarm: 0, power_alarm: 0}, end);
};
tczone_record._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.temp_sp = pbf.readVarint();
    else if (tag === 2) obj.manual_sp = pbf.readVarint();
    else if (tag === 3) obj.actual_temp = pbf.readVarint();
    else if (tag === 4) obj.actual_percent = pbf.readVarint();
    else if (tag === 5) obj.actual_current = pbf.readVarint();
    else if (tag === 6) obj.settings = pbf.readVarint();
    else if (tag === 7) obj.temperature_alarm = pbf.readVarint();
    else if (tag === 8) obj.power_alarm = pbf.readVarint();
};
tczone_record.write = function (obj, pbf) {
    if (obj.temp_sp) pbf.writeVarintField(1, obj.temp_sp);
    if (obj.manual_sp) pbf.writeVarintField(2, obj.manual_sp);
    if (obj.actual_temp) pbf.writeVarintField(3, obj.actual_temp);
    if (obj.actual_percent) pbf.writeVarintField(4, obj.actual_percent);
    if (obj.actual_current) pbf.writeVarintField(5, obj.actual_current);
    if (obj.settings) pbf.writeVarintField(6, obj.settings);
    if (obj.temperature_alarm) pbf.writeVarintField(7, obj.temperature_alarm);
    if (obj.power_alarm) pbf.writeVarintField(8, obj.power_alarm);
};

// tczone ========================================

var tczone = exports.tczone = {};

tczone.read = function (pbf, end) {
    return pbf.readFields(tczone._readField, {mt: 0, zones: 0, records: []}, end);
};
tczone._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.mt = pbf.readVarint();
    else if (tag === 2) obj.zones = pbf.readVarint();
    else if (tag === 3) obj.records.push(tczone_record.read(pbf, pbf.readVarint() + pbf.pos));
};
tczone.write = function (obj, pbf) {
    if (obj.mt) pbf.writeVarintField(1, obj.mt);
    if (obj.zones) pbf.writeVarintField(2, obj.zones);
    if (obj.records) for (var i = 0; i < obj.records.length; i++) pbf.writeMessage(3, tczone_record.write, obj.records[i]);
};

// healthstatus ========================================

var healthstatus = exports.healthstatus = {};

healthstatus.read = function (pbf, end) {
    return pbf.readFields(healthstatus._readField, {mt: 0, status: []}, end);
};
healthstatus._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.mt = pbf.readVarint();
    else if (tag === 2) pbf.readPackedVarint(obj.status, true);
};
healthstatus.write = function (obj, pbf) {
    if (obj.mt) pbf.writeVarintField(1, obj.mt);
    if (obj.status) pbf.writePackedVarint(2, obj.status);
};
